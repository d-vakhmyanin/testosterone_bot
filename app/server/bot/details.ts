import { COMMANDS } from './commands';

import { Bot } from '../types';
import { TRAINING_CONFIG } from '../config';
import { replyToMessage } from '../utils/replyToMessage';

const getWeekDayNames = (weekdays: number[]) =>
    weekdays
        .map((dayNumber) => {
            if (
                typeof dayNumber !== 'number' ||
                dayNumber < 0 ||
                dayNumber > 6 ||
                !Number.isInteger(dayNumber)
            ) {
                throw new Error(
                    `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è: ${dayNumber}. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 0 (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) - 6 (—Å—É–±–±–æ—Ç–∞).`
                );
            }

            const date = new Date(2023, 0, 1 + dayNumber); // 1 —è–Ω–≤–∞—Ä—è 2023 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (0)
            return date.toLocaleDateString('ru-RU', { weekday: 'short' });
        })
        .join('/');

export const details = (bot: Bot) => {
    bot.command(COMMANDS.details, (ctx) => {
        const weekdayNames = getWeekDayNames(TRAINING_CONFIG.idealDaysOfWeek);

        replyToMessage(
            ctx,
            `
<b>üìä –°–∏—Å—Ç–µ–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤:</b>

‚úî <u>–ò–¥–µ–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞</u> (${weekdayNames}):
<b>${TRAINING_CONFIG.rules.PERFECT.score} –±–∞–ª–ª</b> (–∏ –≤—Å–µ–æ–±—â–µ–µ –£–í–û–ñ–ï–ù–ò–ï)

‚è± <u>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å, –Ω–æ –Ω–µ –≤—Ä–µ–º—è</u>:
<b>${TRAINING_CONFIG.rules.GOOD_DAY_BAD_TIME.score} –±–∞–ª–ª–∞</b> (–Ω–µ —à—Ç—Ä–∞—Ñ!)  

üìÖ <u>–î—Ä—É–≥–∏–µ –¥–Ω–∏</u>: 
<b>${TRAINING_CONFIG.rules.BAD_DAY.score} –±–∞–ª–ª–∞</b> (–ø—Ä–æ—Å—Ç–æ –¥–ª—è –≥–∞–ª–æ—á–∫–∏)  

üíÄ <u>–ü—Ä–æ–ø—É—Å–∫ ${weekdayNames}</u>: 
<b>${TRAINING_CONFIG.rules.SKIP.score} –±–∞–ª–ª–∞</b> (–≠–¢–û –ó–ê–õ–Å–¢, –í–û–ò–ù)  

<code>–•–æ–¥–∏ –≤ –Ω—É–∂–Ω—ã–µ –¥–Ω–∏ ‚Äî –∏ –Ω–µ —Å—Ç–∞–Ω–µ—à—å –ª–æ—Ö–æ–º!</code>
`
        );
    });
};
