import { Telegraf } from 'telegraf';

import { COMMANDS } from './commands';
import { addUserToList } from './register';

import { getRandom } from '../utils/getRandom';
import { createCronJob } from '../cron/cron';

const welcomeText = `
üî• <b>TESTOSTERONE BOT</b> üî•

–ù—É —á—ë, —Å–ª–∞–±–∞–∫, —Ä–µ—à–∏–ª –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è? –©–∞ —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É –Ω–µ –ø—Ä–æ—Å—Ä–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é –∫–∞–∫ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑!

<b>–ß—ë —É–º–µ—é:</b>
üìù <code>/register</code> - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ —Ä—è–¥—ã –∂–µ–ª–µ–∑–Ω—ã—Ö –±—Ä–∞—Ç—å–µ–≤ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)
üí™ <code>/gym</code> - –æ—Ç–º–µ—Ç–∏—Ç—å—Å—è —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –ø—Ä–æ–µ–±–∞–ª—Å—è –∏ –ø—Ä–∏—à—ë–ª –≤ –∫–∞—á–∞–ª–∫—É
üìä <code>/stats</code> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Ç—ã –Ω–µ –±—ã–ª –ª–æ—Ö–æ–º –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ
ü§° <code>/shame</code> - –≤—ã—á–∏—Å–ª–∏—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –¥—Ä–∏—â–∞ –≤ —á–∞—Ç–µ (–≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ç—ã)

<code>–ï—Å–ª–∏ –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è –≤ –±–æ—Ç–µ - —Å—á–∏—Ç–∞–π, –Ω–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª—Å—è!</code>

–î–∞–≤–∞–π, –∂–º–∏ /register, –ø–æ—Ç–æ–º —É–∂–µ –≥–µ—Ä–æ–π—Å—Ç–≤—É–π. –ò –¥–∞, –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–±—è –¥–∞–∂–µ –≤ –ø–æ–∑–æ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ –≤–æ–∑—å–º—É—Ç - –≤–æ—Ç —Ç–∞–∫–æ–π –ø–æ–∑–æ—Ä! –ü–æ—Ç–æ–º –∂–º–∏ /gym, –º–µ—à–æ–∫ —Å –∫–æ—Å—Ç—è–º–∏. –ò –Ω–µ –≤–∑–¥—É–º–∞–π –º–Ω–µ —Ç—É—Ç —Ö—É–π–Ω—é –ø–∏—Å–∞—Ç—å –ø—Ä–æ "—Ç—Ä–∞–≤–º—É –∫–æ–ª–µ–Ω–∞"!

‚ùì /help –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å (–æ–Ω–∞ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–∞, –Ω–æ —è –ø–æ–º–æ—á—å –Ω–µ —Å–º–æ–≥—É)
  `;

const roastMessages = [
    '–ù—É –∏ –≤–∞–ª–∏ —Ç–æ–≥–¥–∞, –º–µ—à–æ–∫ —Å –∫–æ—Å—Ç—è–º–∏! –¢–µ–±–µ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø–æ–¥–Ω—è—Ç—å –¥–∞–∂–µ –º–æ–∏ –æ–∂–∏–¥–∞–Ω–∏—è',
    "–ó–∞–ø–∏—Å–∞–ª —Ç–µ–±—è –≤ —Ä–∞–∑–¥–µ–ª '–ø–æ—Ç–æ–º–∫–∏ –¥–∏–≤–∞–Ω–æ–≤'. –ì–æ—Ä–¥–∏—Å—å!",
    '–õ–∞–¥–Ω–æ, –∏–¥–∏ –ª–µ–∂–∏. –ú—ã –ø–æ–∫–∞ –ø–æ–Ω–∞—Ä–æ—à–∫—É –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è',
    '–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–æ–∏–≥—Ä–∞–ª –∫–∞—á–∞–ª–∫—É. –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéâ',
    '–ù—É –æ–∫, –ø–æ—Ç–æ–º –Ω–µ –Ω–æ–π —á—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –≤–µ–¥—ë—Ç—Å—è',
    '–°–ª–∞–±–∞–∫ detected! –ú–æ–∂–µ—Ç —Ç—ã –¥–æ–±—å—ë—à—å—Å—è —É—Å–ø–µ—Ö–æ–≤ –Ω–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö –ø–æ –ø–æ–µ–¥–∞–Ω–∏—é –±—É–ª–æ–∫ —Å –º–∞—Å–ª–æ–º?',
    '–¢–≤–æ–∏–º –ø—Ä–µ–¥–∫–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—ã–¥–Ω–æ –∑–∞ —Ç–µ–±—è',
    '–ù–∏ –¥–Ω–∞ —Ç–µ–±–µ, –Ω–∏ –ø–æ–∫—Ä—ã—à–∫–∏',
    '–¢—ã –ø–∏–¥–æ—Ä',
];

const motivators = [
    '–ù—É –¥–∞, –Ω—É –¥–∞... –ê —Ç–µ–ø–µ—Ä—å –∏–¥–∏ –∏ –¥–æ–∫–∞–∂–∏!',
    '–¢–∞–∫-—Ç–∞–∫, –∫—Ç–æ —É –Ω–∞—Å —Ç—É—Ç —Ä–µ—à–∏–ª —Å—Ç–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–æ–º? üí™ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª—É–±, –ø—Ä–∏—è—Ç–µ–ª—å!',
    '–û, –Ω–æ–≤—ã–π —Ä–µ–∫—Ä—É—Ç! –¢–µ–ø–µ—Ä—å —Ç–≤–æ–∏ –ª–µ–Ω–∏–≤—ã–µ –æ—Ç–º–∞–∑–∫–∏ –±—É–¥—É—Ç —É—á—Ç–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ üòà',
    '–ó–∞–ø–∏—Å–∞–ª —Ç–µ–±—è –≤ —Ä—è–¥—ã –∂–µ–ª–µ–∑–Ω—ã—Ö –±—Ä–∞—Ç—å–µ–≤. –¢–µ–ø–µ—Ä—å –ø–æ–∑–æ—Ä–Ω–æ –±—É–¥–µ—Ç —Å–ª–∏—Ç—å—Å—è!',
    '–ì–æ—Ç–æ–≤—å—Å—è –∫ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏: –∏–∑ –º–µ—à–∫–∞ —Å –∫–æ—Å—Ç—è–º–∏ ‚Üí –≤ –≥—Ä–µ—á–µ—Å–∫—É—é —Å—Ç–∞—Ç—É—é!',
    '–ü—Ä–∏–Ω—è—Ç–æ! –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –ø—Ä–æ–ø—É—Å–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±—É–¥–µ—Ç –±–æ–ª—å–Ω–æ –±–∏—Ç—å –ø–æ —Å–∞–º–æ–ª—é–±–∏—é',
    '–ó–∞–Ω–µ—Å —Ç–µ–±—è –≤ —Å–≤—è—â–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–∂–∞–ª–∏. –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∂–µ—Å—Ç—å!',
    '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤–∞ –±—ã—Ç—å —Å–ª–∞–±–∞–∫–æ–º',
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä, –≥–¥–µ '—É—Å—Ç–∞–ª' ‚Äî –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–µ! üöÄ",
];

// —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
export const start = () => {
    const token = process.env.TG_TOKEN;

    if (typeof token !== 'string') {
        throw new Error('No tg token');
    }

    const bot = new Telegraf(token);

    bot.command(COMMANDS.start, (ctx) => {
        ctx.replyWithHTML(welcomeText, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–Ø –ù–ï –õ–û–•!', callback_data: 'not_lox' }],
                    [{ text: '–ü—Ä–∏–∑–Ω–∞—é, —è –¥—Ä–∏—â', callback_data: 'im_weak' }],
                ],
            },
        });

        createCronJob(bot, ctx.chat.id);
    });

    bot.action('not_lox', async (ctx) => {
        await ctx.answerCbQuery();

        const chatId = ctx.chat?.id;
        const userTag = ctx.from.username ? `@${ctx.from.username} ` : '';

        if (chatId) {
            if (addUserToList(chatId, ctx.from)) {
                const reply = getRandom(motivators);

                return ctx.replyWithHTML(`${userTag}${reply}`);
            } else {
                ctx.reply(`${userTag}–¢—ã –¥–æ–ª–±–æ—ë–±? –¢—ã –∏ —Ç–∞–∫ –∑–∞—Ä–µ–≥–∞–Ω`);
            }
        } else {
            ctx.reply(`${userTag}–¢—ã –¥–æ–ª–±–æ—ë–±? –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ —ç—Ç–æ–º –≤–∏–Ω–æ–≤–∞—Ç —Ç—ã`);
        }
    });

    bot.action('im_weak', async (ctx) => {
        const userTag = ctx.from.username ? `@${ctx.from.username} ` : '';

        await ctx.answerCbQuery();
        const reply = getRandom(roastMessages);

        ctx.replyWithHTML(`${userTag}${reply}`);
    });

    return bot;
};
